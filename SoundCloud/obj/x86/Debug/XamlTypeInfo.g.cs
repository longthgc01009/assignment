//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace SoundCloud
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::SoundCloud.SoundCloud_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace SoundCloud.SoundCloud_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[26];
            _typeNameTable[0] = "SoundCloud.TopTrackControl";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[2] = "SoundCloud.Models.TopTrack";
            _typeNameTable[3] = "Object";
            _typeNameTable[4] = "SoundCloud.ChartPage";
            _typeNameTable[5] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[6] = "SoundCloud.PlaylistControl";
            _typeNameTable[7] = "SoundCloud.Models.SoundCloudPlaylist";
            _typeNameTable[8] = "SoundCloud.DashBoard";
            _typeNameTable[9] = "System.Collections.ObjectModel.ObservableCollection`1<SoundCloud.Models.SoundCloudPlaylist>";
            _typeNameTable[10] = "System.Collections.ObjectModel.Collection`1<SoundCloud.Models.SoundCloudPlaylist>";
            _typeNameTable[11] = "Int32";
            _typeNameTable[12] = "String";
            _typeNameTable[13] = "System.Collections.Generic.List`1<SoundCloud.Models.SoundCloudTrack>";
            _typeNameTable[14] = "SoundCloud.Models.SoundCloudTrack";
            _typeNameTable[15] = "Boolean";
            _typeNameTable[16] = "SoundCloud.Models.PlaylistUser";
            _typeNameTable[17] = "System.Collections.ObjectModel.ObservableCollection`1<SoundCloud.Models.SoundCloudTrack>";
            _typeNameTable[18] = "System.Collections.ObjectModel.Collection`1<SoundCloud.Models.SoundCloudTrack>";
            _typeNameTable[19] = "SoundCloud.DownloadJson";
            _typeNameTable[20] = "SoundCloud.Dialog.Authen";
            _typeNameTable[21] = "Windows.UI.Xaml.Controls.ContentDialog";
            _typeNameTable[22] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[23] = "SoundCloud.FavoritesControl";
            _typeNameTable[24] = "SoundCloud.MainPage";
            _typeNameTable[25] = "SoundCloud.Models.SoundCloudMe";

            _typeTable = new global::System.Type[26];
            _typeTable[0] = typeof(global::SoundCloud.TopTrackControl);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[2] = typeof(global::SoundCloud.Models.TopTrack);
            _typeTable[3] = typeof(global::System.Object);
            _typeTable[4] = typeof(global::SoundCloud.ChartPage);
            _typeTable[5] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[6] = typeof(global::SoundCloud.PlaylistControl);
            _typeTable[7] = typeof(global::SoundCloud.Models.SoundCloudPlaylist);
            _typeTable[8] = typeof(global::SoundCloud.DashBoard);
            _typeTable[9] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::SoundCloud.Models.SoundCloudPlaylist>);
            _typeTable[10] = typeof(global::System.Collections.ObjectModel.Collection<global::SoundCloud.Models.SoundCloudPlaylist>);
            _typeTable[11] = typeof(global::System.Int32);
            _typeTable[12] = typeof(global::System.String);
            _typeTable[13] = typeof(global::System.Collections.Generic.List<global::SoundCloud.Models.SoundCloudTrack>);
            _typeTable[14] = typeof(global::SoundCloud.Models.SoundCloudTrack);
            _typeTable[15] = typeof(global::System.Boolean);
            _typeTable[16] = typeof(global::SoundCloud.Models.PlaylistUser);
            _typeTable[17] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::SoundCloud.Models.SoundCloudTrack>);
            _typeTable[18] = typeof(global::System.Collections.ObjectModel.Collection<global::SoundCloud.Models.SoundCloudTrack>);
            _typeTable[19] = typeof(global::SoundCloud.DownloadJson);
            _typeTable[20] = typeof(global::SoundCloud.Dialog.Authen);
            _typeTable[21] = typeof(global::Windows.UI.Xaml.Controls.ContentDialog);
            _typeTable[22] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[23] = typeof(global::SoundCloud.FavoritesControl);
            _typeTable[24] = typeof(global::SoundCloud.MainPage);
            _typeTable[25] = typeof(global::SoundCloud.Models.SoundCloudMe);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_TopTrackControl() { return new global::SoundCloud.TopTrackControl(); }
        private object Activate_2_TopTrack() { return new global::SoundCloud.Models.TopTrack(); }
        private object Activate_4_ChartPage() { return new global::SoundCloud.ChartPage(); }
        private object Activate_6_PlaylistControl() { return new global::SoundCloud.PlaylistControl(); }
        private object Activate_7_SoundCloudPlaylist() { return new global::SoundCloud.Models.SoundCloudPlaylist(); }
        private object Activate_8_DashBoard() { return new global::SoundCloud.DashBoard(); }
        private object Activate_9_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::SoundCloud.Models.SoundCloudPlaylist>(); }
        private object Activate_10_Collection() { return new global::System.Collections.ObjectModel.Collection<global::SoundCloud.Models.SoundCloudPlaylist>(); }
        private object Activate_13_List() { return new global::System.Collections.Generic.List<global::SoundCloud.Models.SoundCloudTrack>(); }
        private object Activate_14_SoundCloudTrack() { return new global::SoundCloud.Models.SoundCloudTrack(); }
        private object Activate_16_PlaylistUser() { return new global::SoundCloud.Models.PlaylistUser(); }
        private object Activate_17_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::SoundCloud.Models.SoundCloudTrack>(); }
        private object Activate_18_Collection() { return new global::System.Collections.ObjectModel.Collection<global::SoundCloud.Models.SoundCloudTrack>(); }
        private object Activate_19_DownloadJson() { return new global::SoundCloud.DownloadJson(); }
        private object Activate_20_Authen() { return new global::SoundCloud.Dialog.Authen(); }
        private object Activate_23_FavoritesControl() { return new global::SoundCloud.FavoritesControl(); }
        private object Activate_24_MainPage() { return new global::SoundCloud.MainPage(); }
        private object Activate_25_SoundCloudMe() { return new global::SoundCloud.Models.SoundCloudMe(); }
        private void VectorAdd_9_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoundCloud.Models.SoundCloudPlaylist>)instance;
            var newItem = (global::SoundCloud.Models.SoundCloudPlaylist)item;
            collection.Add(newItem);
        }
        private void VectorAdd_10_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoundCloud.Models.SoundCloudPlaylist>)instance;
            var newItem = (global::SoundCloud.Models.SoundCloudPlaylist)item;
            collection.Add(newItem);
        }
        private void VectorAdd_13_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoundCloud.Models.SoundCloudTrack>)instance;
            var newItem = (global::SoundCloud.Models.SoundCloudTrack)item;
            collection.Add(newItem);
        }
        private void VectorAdd_17_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoundCloud.Models.SoundCloudTrack>)instance;
            var newItem = (global::SoundCloud.Models.SoundCloudTrack)item;
            collection.Add(newItem);
        }
        private void VectorAdd_18_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::SoundCloud.Models.SoundCloudTrack>)instance;
            var newItem = (global::SoundCloud.Models.SoundCloudTrack)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::SoundCloud.SoundCloud_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  SoundCloud.TopTrackControl
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_0_TopTrackControl;
                userType.AddMemberName("TopTrack");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  SoundCloud.Models.TopTrack
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 3:   //  Object
                xamlType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  SoundCloud.ChartPage
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_4_ChartPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 5:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  SoundCloud.PlaylistControl
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_6_PlaylistControl;
                userType.AddMemberName("Playlists");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  SoundCloud.Models.SoundCloudPlaylist
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_7_SoundCloudPlaylist;
                userType.AddMemberName("duration");
                userType.AddMemberName("release_day");
                userType.AddMemberName("permalink_url");
                userType.AddMemberName("genre");
                userType.AddMemberName("permalink");
                userType.AddMemberName("purchase_url");
                userType.AddMemberName("release_month");
                userType.AddMemberName("description");
                userType.AddMemberName("uri");
                userType.AddMemberName("label_name");
                userType.AddMemberName("tag_list");
                userType.AddMemberName("release_year");
                userType.AddMemberName("track_count");
                userType.AddMemberName("user_id");
                userType.AddMemberName("last_modified");
                userType.AddMemberName("license");
                userType.AddMemberName("tracks");
                userType.AddMemberName("playlist_type");
                userType.AddMemberName("id");
                userType.AddMemberName("downloadable");
                userType.AddMemberName("sharing");
                userType.AddMemberName("created_at");
                userType.AddMemberName("release");
                userType.AddMemberName("kind");
                userType.AddMemberName("title");
                userType.AddMemberName("type");
                userType.AddMemberName("purchase_title");
                userType.AddMemberName("artwork_url");
                userType.AddMemberName("ean");
                userType.AddMemberName("streamable");
                userType.AddMemberName("user");
                userType.AddMemberName("embeddable_by");
                userType.AddMemberName("label_id");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  SoundCloud.DashBoard
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_8_DashBoard;
                userType.AddMemberName("listPlaylist");
                userType.AddMemberName("FavoritesTrack");
                userType.AddMemberName("clientDownload");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 9:   //  System.Collections.ObjectModel.ObservableCollection`1<SoundCloud.Models.SoundCloudPlaylist>
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<SoundCloud.Models.SoundCloudPlaylist>"));
                userType.CollectionAdd = VectorAdd_9_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 10:   //  System.Collections.ObjectModel.Collection`1<SoundCloud.Models.SoundCloudPlaylist>
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_Collection;
                userType.CollectionAdd = VectorAdd_10_Collection;
                xamlType = userType;
                break;

            case 11:   //  Int32
                xamlType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  String
                xamlType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  System.Collections.Generic.List`1<SoundCloud.Models.SoundCloudTrack>
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_13_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 14:   //  SoundCloud.Models.SoundCloudTrack
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_14_SoundCloudTrack;
                userType.AddMemberName("kind");
                userType.AddMemberName("id");
                userType.AddMemberName("created_at");
                userType.AddMemberName("user_id");
                userType.AddMemberName("duration");
                userType.AddMemberName("commentable");
                userType.AddMemberName("state");
                userType.AddMemberName("original_content_size");
                userType.AddMemberName("last_modified");
                userType.AddMemberName("sharing");
                userType.AddMemberName("tag_list");
                userType.AddMemberName("permalink");
                userType.AddMemberName("streamable");
                userType.AddMemberName("embeddable_by");
                userType.AddMemberName("downloadable");
                userType.AddMemberName("purchase_url");
                userType.AddMemberName("label_id");
                userType.AddMemberName("purchase_title");
                userType.AddMemberName("genre");
                userType.AddMemberName("title");
                userType.AddMemberName("description");
                userType.AddMemberName("label_name");
                userType.AddMemberName("release");
                userType.AddMemberName("track_type");
                userType.AddMemberName("key_signature");
                userType.AddMemberName("isrc");
                userType.AddMemberName("video_url");
                userType.AddMemberName("bpm");
                userType.AddMemberName("release_year");
                userType.AddMemberName("release_month");
                userType.AddMemberName("release_day");
                userType.AddMemberName("original_format");
                userType.AddMemberName("license");
                userType.AddMemberName("uri");
                userType.AddMemberName("user");
                userType.AddMemberName("attachments_uri");
                userType.AddMemberName("permalink_url");
                userType.AddMemberName("artwork_url");
                userType.AddMemberName("waveform_url");
                userType.AddMemberName("stream_url");
                userType.AddMemberName("playback_count");
                userType.AddMemberName("download_count");
                userType.AddMemberName("favoritings_count");
                userType.AddMemberName("comment_count");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  Boolean
                xamlType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  SoundCloud.Models.PlaylistUser
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  System.Collections.ObjectModel.ObservableCollection`1<SoundCloud.Models.SoundCloudTrack>
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<SoundCloud.Models.SoundCloudTrack>"));
                userType.CollectionAdd = VectorAdd_17_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 18:   //  System.Collections.ObjectModel.Collection`1<SoundCloud.Models.SoundCloudTrack>
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_18_Collection;
                userType.CollectionAdd = VectorAdd_18_Collection;
                xamlType = userType;
                break;

            case 19:   //  SoundCloud.DownloadJson
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  SoundCloud.Dialog.Authen
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.Activator = Activate_20_Authen;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  Windows.UI.Xaml.Controls.ContentDialog
                xamlType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  SoundCloud.FavoritesControl
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_23_FavoritesControl;
                userType.AddMemberName("Track");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  SoundCloud.MainPage
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_24_MainPage;
                userType.AddMemberName("clientDownload");
                userType.AddMemberName("meInfo");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  SoundCloud.Models.SoundCloudMe
                userType = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_TopTrackControl_TopTrack(object instance)
        {
            var that = (global::SoundCloud.TopTrackControl)instance;
            return that.TopTrack;
        }
        private object get_1_PlaylistControl_Playlists(object instance)
        {
            var that = (global::SoundCloud.PlaylistControl)instance;
            return that.Playlists;
        }
        private object get_2_DashBoard_listPlaylist(object instance)
        {
            var that = (global::SoundCloud.DashBoard)instance;
            return that.listPlaylist;
        }
        private void set_2_DashBoard_listPlaylist(object instance, object Value)
        {
            var that = (global::SoundCloud.DashBoard)instance;
            that.listPlaylist = (global::System.Collections.ObjectModel.ObservableCollection<global::SoundCloud.Models.SoundCloudPlaylist>)Value;
        }
        private object get_3_SoundCloudPlaylist_duration(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.duration;
        }
        private void set_3_SoundCloudPlaylist_duration(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.duration = (global::System.Int32)Value;
        }
        private object get_4_SoundCloudPlaylist_release_day(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.release_day;
        }
        private void set_4_SoundCloudPlaylist_release_day(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.release_day = (global::System.Object)Value;
        }
        private object get_5_SoundCloudPlaylist_permalink_url(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.permalink_url;
        }
        private void set_5_SoundCloudPlaylist_permalink_url(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.permalink_url = (global::System.String)Value;
        }
        private object get_6_SoundCloudPlaylist_genre(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.genre;
        }
        private void set_6_SoundCloudPlaylist_genre(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.genre = (global::System.Object)Value;
        }
        private object get_7_SoundCloudPlaylist_permalink(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.permalink;
        }
        private void set_7_SoundCloudPlaylist_permalink(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.permalink = (global::System.String)Value;
        }
        private object get_8_SoundCloudPlaylist_purchase_url(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.purchase_url;
        }
        private void set_8_SoundCloudPlaylist_purchase_url(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.purchase_url = (global::System.Object)Value;
        }
        private object get_9_SoundCloudPlaylist_release_month(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.release_month;
        }
        private void set_9_SoundCloudPlaylist_release_month(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.release_month = (global::System.Object)Value;
        }
        private object get_10_SoundCloudPlaylist_description(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.description;
        }
        private void set_10_SoundCloudPlaylist_description(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.description = (global::System.Object)Value;
        }
        private object get_11_SoundCloudPlaylist_uri(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.uri;
        }
        private void set_11_SoundCloudPlaylist_uri(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.uri = (global::System.String)Value;
        }
        private object get_12_SoundCloudPlaylist_label_name(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.label_name;
        }
        private void set_12_SoundCloudPlaylist_label_name(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.label_name = (global::System.Object)Value;
        }
        private object get_13_SoundCloudPlaylist_tag_list(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.tag_list;
        }
        private void set_13_SoundCloudPlaylist_tag_list(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.tag_list = (global::System.String)Value;
        }
        private object get_14_SoundCloudPlaylist_release_year(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.release_year;
        }
        private void set_14_SoundCloudPlaylist_release_year(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.release_year = (global::System.Object)Value;
        }
        private object get_15_SoundCloudPlaylist_track_count(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.track_count;
        }
        private void set_15_SoundCloudPlaylist_track_count(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.track_count = (global::System.Int32)Value;
        }
        private object get_16_SoundCloudPlaylist_user_id(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.user_id;
        }
        private void set_16_SoundCloudPlaylist_user_id(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.user_id = (global::System.Int32)Value;
        }
        private object get_17_SoundCloudPlaylist_last_modified(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.last_modified;
        }
        private void set_17_SoundCloudPlaylist_last_modified(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.last_modified = (global::System.String)Value;
        }
        private object get_18_SoundCloudPlaylist_license(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.license;
        }
        private void set_18_SoundCloudPlaylist_license(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.license = (global::System.String)Value;
        }
        private object get_19_SoundCloudPlaylist_tracks(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.tracks;
        }
        private void set_19_SoundCloudPlaylist_tracks(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.tracks = (global::System.Collections.Generic.List<global::SoundCloud.Models.SoundCloudTrack>)Value;
        }
        private object get_20_SoundCloudTrack_kind(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.kind;
        }
        private void set_20_SoundCloudTrack_kind(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.kind = (global::System.String)Value;
        }
        private object get_21_SoundCloudTrack_id(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.id;
        }
        private void set_21_SoundCloudTrack_id(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.id = (global::System.Int32)Value;
        }
        private object get_22_SoundCloudTrack_created_at(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.created_at;
        }
        private void set_22_SoundCloudTrack_created_at(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.created_at = (global::System.String)Value;
        }
        private object get_23_SoundCloudTrack_user_id(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.user_id;
        }
        private void set_23_SoundCloudTrack_user_id(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.user_id = (global::System.Int32)Value;
        }
        private object get_24_SoundCloudTrack_duration(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.duration;
        }
        private void set_24_SoundCloudTrack_duration(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.duration = (global::System.Int32)Value;
        }
        private object get_25_SoundCloudTrack_commentable(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.commentable;
        }
        private void set_25_SoundCloudTrack_commentable(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.commentable = (global::System.Boolean)Value;
        }
        private object get_26_SoundCloudTrack_state(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.state;
        }
        private void set_26_SoundCloudTrack_state(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.state = (global::System.String)Value;
        }
        private object get_27_SoundCloudTrack_original_content_size(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.original_content_size;
        }
        private void set_27_SoundCloudTrack_original_content_size(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.original_content_size = (global::System.Int32)Value;
        }
        private object get_28_SoundCloudTrack_last_modified(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.last_modified;
        }
        private void set_28_SoundCloudTrack_last_modified(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.last_modified = (global::System.String)Value;
        }
        private object get_29_SoundCloudTrack_sharing(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.sharing;
        }
        private void set_29_SoundCloudTrack_sharing(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.sharing = (global::System.String)Value;
        }
        private object get_30_SoundCloudTrack_tag_list(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.tag_list;
        }
        private void set_30_SoundCloudTrack_tag_list(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.tag_list = (global::System.String)Value;
        }
        private object get_31_SoundCloudTrack_permalink(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.permalink;
        }
        private void set_31_SoundCloudTrack_permalink(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.permalink = (global::System.String)Value;
        }
        private object get_32_SoundCloudTrack_streamable(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.streamable;
        }
        private void set_32_SoundCloudTrack_streamable(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.streamable = (global::System.Boolean)Value;
        }
        private object get_33_SoundCloudTrack_embeddable_by(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.embeddable_by;
        }
        private void set_33_SoundCloudTrack_embeddable_by(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.embeddable_by = (global::System.String)Value;
        }
        private object get_34_SoundCloudTrack_downloadable(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.downloadable;
        }
        private void set_34_SoundCloudTrack_downloadable(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.downloadable = (global::System.Boolean)Value;
        }
        private object get_35_SoundCloudTrack_purchase_url(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.purchase_url;
        }
        private void set_35_SoundCloudTrack_purchase_url(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.purchase_url = (global::System.String)Value;
        }
        private object get_36_SoundCloudTrack_label_id(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.label_id;
        }
        private void set_36_SoundCloudTrack_label_id(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.label_id = (global::System.Object)Value;
        }
        private object get_37_SoundCloudTrack_purchase_title(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.purchase_title;
        }
        private void set_37_SoundCloudTrack_purchase_title(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.purchase_title = (global::System.String)Value;
        }
        private object get_38_SoundCloudTrack_genre(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.genre;
        }
        private void set_38_SoundCloudTrack_genre(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.genre = (global::System.String)Value;
        }
        private object get_39_SoundCloudTrack_title(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.title;
        }
        private void set_39_SoundCloudTrack_title(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.title = (global::System.String)Value;
        }
        private object get_40_SoundCloudTrack_description(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.description;
        }
        private void set_40_SoundCloudTrack_description(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.description = (global::System.String)Value;
        }
        private object get_41_SoundCloudTrack_label_name(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.label_name;
        }
        private void set_41_SoundCloudTrack_label_name(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.label_name = (global::System.Object)Value;
        }
        private object get_42_SoundCloudTrack_release(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.release;
        }
        private void set_42_SoundCloudTrack_release(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.release = (global::System.Object)Value;
        }
        private object get_43_SoundCloudTrack_track_type(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.track_type;
        }
        private void set_43_SoundCloudTrack_track_type(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.track_type = (global::System.Object)Value;
        }
        private object get_44_SoundCloudTrack_key_signature(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.key_signature;
        }
        private void set_44_SoundCloudTrack_key_signature(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.key_signature = (global::System.Object)Value;
        }
        private object get_45_SoundCloudTrack_isrc(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.isrc;
        }
        private void set_45_SoundCloudTrack_isrc(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.isrc = (global::System.Object)Value;
        }
        private object get_46_SoundCloudTrack_video_url(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.video_url;
        }
        private void set_46_SoundCloudTrack_video_url(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.video_url = (global::System.Object)Value;
        }
        private object get_47_SoundCloudTrack_bpm(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.bpm;
        }
        private void set_47_SoundCloudTrack_bpm(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.bpm = (global::System.Object)Value;
        }
        private object get_48_SoundCloudTrack_release_year(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.release_year;
        }
        private void set_48_SoundCloudTrack_release_year(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.release_year = (global::System.Object)Value;
        }
        private object get_49_SoundCloudTrack_release_month(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.release_month;
        }
        private void set_49_SoundCloudTrack_release_month(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.release_month = (global::System.Object)Value;
        }
        private object get_50_SoundCloudTrack_release_day(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.release_day;
        }
        private void set_50_SoundCloudTrack_release_day(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.release_day = (global::System.Object)Value;
        }
        private object get_51_SoundCloudTrack_original_format(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.original_format;
        }
        private void set_51_SoundCloudTrack_original_format(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.original_format = (global::System.String)Value;
        }
        private object get_52_SoundCloudTrack_license(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.license;
        }
        private void set_52_SoundCloudTrack_license(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.license = (global::System.String)Value;
        }
        private object get_53_SoundCloudTrack_uri(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.uri;
        }
        private void set_53_SoundCloudTrack_uri(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.uri = (global::System.String)Value;
        }
        private object get_54_SoundCloudTrack_user(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.user;
        }
        private void set_54_SoundCloudTrack_user(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.user = (global::SoundCloud.Models.PlaylistUser)Value;
        }
        private object get_55_SoundCloudTrack_attachments_uri(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.attachments_uri;
        }
        private void set_55_SoundCloudTrack_attachments_uri(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.attachments_uri = (global::System.String)Value;
        }
        private object get_56_SoundCloudTrack_permalink_url(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.permalink_url;
        }
        private void set_56_SoundCloudTrack_permalink_url(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.permalink_url = (global::System.String)Value;
        }
        private object get_57_SoundCloudTrack_artwork_url(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.artwork_url;
        }
        private void set_57_SoundCloudTrack_artwork_url(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.artwork_url = (global::System.String)Value;
        }
        private object get_58_SoundCloudTrack_waveform_url(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.waveform_url;
        }
        private void set_58_SoundCloudTrack_waveform_url(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.waveform_url = (global::System.String)Value;
        }
        private object get_59_SoundCloudTrack_stream_url(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.stream_url;
        }
        private void set_59_SoundCloudTrack_stream_url(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.stream_url = (global::System.String)Value;
        }
        private object get_60_SoundCloudTrack_playback_count(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.playback_count;
        }
        private void set_60_SoundCloudTrack_playback_count(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.playback_count = (global::System.Int32)Value;
        }
        private object get_61_SoundCloudTrack_download_count(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.download_count;
        }
        private void set_61_SoundCloudTrack_download_count(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.download_count = (global::System.Int32)Value;
        }
        private object get_62_SoundCloudTrack_favoritings_count(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.favoritings_count;
        }
        private void set_62_SoundCloudTrack_favoritings_count(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.favoritings_count = (global::System.Int32)Value;
        }
        private object get_63_SoundCloudTrack_comment_count(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            return that.comment_count;
        }
        private void set_63_SoundCloudTrack_comment_count(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudTrack)instance;
            that.comment_count = (global::System.Int32)Value;
        }
        private object get_64_SoundCloudPlaylist_playlist_type(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.playlist_type;
        }
        private void set_64_SoundCloudPlaylist_playlist_type(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.playlist_type = (global::System.Object)Value;
        }
        private object get_65_SoundCloudPlaylist_id(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.id;
        }
        private void set_65_SoundCloudPlaylist_id(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.id = (global::System.Int32)Value;
        }
        private object get_66_SoundCloudPlaylist_downloadable(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.downloadable;
        }
        private void set_66_SoundCloudPlaylist_downloadable(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.downloadable = (global::System.Boolean)Value;
        }
        private object get_67_SoundCloudPlaylist_sharing(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.sharing;
        }
        private void set_67_SoundCloudPlaylist_sharing(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.sharing = (global::System.String)Value;
        }
        private object get_68_SoundCloudPlaylist_created_at(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.created_at;
        }
        private void set_68_SoundCloudPlaylist_created_at(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.created_at = (global::System.String)Value;
        }
        private object get_69_SoundCloudPlaylist_release(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.release;
        }
        private void set_69_SoundCloudPlaylist_release(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.release = (global::System.Object)Value;
        }
        private object get_70_SoundCloudPlaylist_kind(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.kind;
        }
        private void set_70_SoundCloudPlaylist_kind(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.kind = (global::System.String)Value;
        }
        private object get_71_SoundCloudPlaylist_title(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.title;
        }
        private void set_71_SoundCloudPlaylist_title(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.title = (global::System.String)Value;
        }
        private object get_72_SoundCloudPlaylist_type(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.type;
        }
        private void set_72_SoundCloudPlaylist_type(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.type = (global::System.Object)Value;
        }
        private object get_73_SoundCloudPlaylist_purchase_title(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.purchase_title;
        }
        private void set_73_SoundCloudPlaylist_purchase_title(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.purchase_title = (global::System.Object)Value;
        }
        private object get_74_SoundCloudPlaylist_artwork_url(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.artwork_url;
        }
        private void set_74_SoundCloudPlaylist_artwork_url(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.artwork_url = (global::System.Object)Value;
        }
        private object get_75_SoundCloudPlaylist_ean(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.ean;
        }
        private void set_75_SoundCloudPlaylist_ean(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.ean = (global::System.Object)Value;
        }
        private object get_76_SoundCloudPlaylist_streamable(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.streamable;
        }
        private void set_76_SoundCloudPlaylist_streamable(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.streamable = (global::System.Boolean)Value;
        }
        private object get_77_SoundCloudPlaylist_user(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.user;
        }
        private void set_77_SoundCloudPlaylist_user(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.user = (global::SoundCloud.Models.PlaylistUser)Value;
        }
        private object get_78_SoundCloudPlaylist_embeddable_by(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.embeddable_by;
        }
        private void set_78_SoundCloudPlaylist_embeddable_by(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.embeddable_by = (global::System.String)Value;
        }
        private object get_79_SoundCloudPlaylist_label_id(object instance)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            return that.label_id;
        }
        private void set_79_SoundCloudPlaylist_label_id(object instance, object Value)
        {
            var that = (global::SoundCloud.Models.SoundCloudPlaylist)instance;
            that.label_id = (global::System.Object)Value;
        }
        private object get_80_DashBoard_FavoritesTrack(object instance)
        {
            var that = (global::SoundCloud.DashBoard)instance;
            return that.FavoritesTrack;
        }
        private void set_80_DashBoard_FavoritesTrack(object instance, object Value)
        {
            var that = (global::SoundCloud.DashBoard)instance;
            that.FavoritesTrack = (global::System.Collections.ObjectModel.ObservableCollection<global::SoundCloud.Models.SoundCloudTrack>)Value;
        }
        private object get_81_DashBoard_clientDownload(object instance)
        {
            var that = (global::SoundCloud.DashBoard)instance;
            return that.clientDownload;
        }
        private void set_81_DashBoard_clientDownload(object instance, object Value)
        {
            var that = (global::SoundCloud.DashBoard)instance;
            that.clientDownload = (global::SoundCloud.DownloadJson)Value;
        }
        private object get_82_FavoritesControl_Track(object instance)
        {
            var that = (global::SoundCloud.FavoritesControl)instance;
            return that.Track;
        }
        private object get_83_MainPage_clientDownload(object instance)
        {
            var that = (global::SoundCloud.MainPage)instance;
            return that.clientDownload;
        }
        private void set_83_MainPage_clientDownload(object instance, object Value)
        {
            var that = (global::SoundCloud.MainPage)instance;
            that.clientDownload = (global::SoundCloud.DownloadJson)Value;
        }
        private object get_84_MainPage_meInfo(object instance)
        {
            var that = (global::SoundCloud.MainPage)instance;
            return that.meInfo;
        }
        private void set_84_MainPage_meInfo(object instance, object Value)
        {
            var that = (global::SoundCloud.MainPage)instance;
            that.meInfo = (global::SoundCloud.Models.SoundCloudMe)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember xamlMember = null;
            global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "SoundCloud.TopTrackControl.TopTrack":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.TopTrackControl");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "TopTrack", "SoundCloud.Models.TopTrack");
                xamlMember.Getter = get_0_TopTrackControl_TopTrack;
                xamlMember.SetIsReadOnly();
                break;
            case "SoundCloud.PlaylistControl.Playlists":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.PlaylistControl");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "Playlists", "SoundCloud.Models.SoundCloudPlaylist");
                xamlMember.Getter = get_1_PlaylistControl_Playlists;
                xamlMember.SetIsReadOnly();
                break;
            case "SoundCloud.DashBoard.listPlaylist":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.DashBoard");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "listPlaylist", "System.Collections.ObjectModel.ObservableCollection`1<SoundCloud.Models.SoundCloudPlaylist>");
                xamlMember.Getter = get_2_DashBoard_listPlaylist;
                xamlMember.Setter = set_2_DashBoard_listPlaylist;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.duration":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "duration", "Int32");
                xamlMember.Getter = get_3_SoundCloudPlaylist_duration;
                xamlMember.Setter = set_3_SoundCloudPlaylist_duration;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.release_day":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "release_day", "Object");
                xamlMember.Getter = get_4_SoundCloudPlaylist_release_day;
                xamlMember.Setter = set_4_SoundCloudPlaylist_release_day;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.permalink_url":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "permalink_url", "String");
                xamlMember.Getter = get_5_SoundCloudPlaylist_permalink_url;
                xamlMember.Setter = set_5_SoundCloudPlaylist_permalink_url;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.genre":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "genre", "Object");
                xamlMember.Getter = get_6_SoundCloudPlaylist_genre;
                xamlMember.Setter = set_6_SoundCloudPlaylist_genre;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.permalink":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "permalink", "String");
                xamlMember.Getter = get_7_SoundCloudPlaylist_permalink;
                xamlMember.Setter = set_7_SoundCloudPlaylist_permalink;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.purchase_url":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "purchase_url", "Object");
                xamlMember.Getter = get_8_SoundCloudPlaylist_purchase_url;
                xamlMember.Setter = set_8_SoundCloudPlaylist_purchase_url;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.release_month":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "release_month", "Object");
                xamlMember.Getter = get_9_SoundCloudPlaylist_release_month;
                xamlMember.Setter = set_9_SoundCloudPlaylist_release_month;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.description":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "description", "Object");
                xamlMember.Getter = get_10_SoundCloudPlaylist_description;
                xamlMember.Setter = set_10_SoundCloudPlaylist_description;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.uri":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "uri", "String");
                xamlMember.Getter = get_11_SoundCloudPlaylist_uri;
                xamlMember.Setter = set_11_SoundCloudPlaylist_uri;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.label_name":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "label_name", "Object");
                xamlMember.Getter = get_12_SoundCloudPlaylist_label_name;
                xamlMember.Setter = set_12_SoundCloudPlaylist_label_name;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.tag_list":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "tag_list", "String");
                xamlMember.Getter = get_13_SoundCloudPlaylist_tag_list;
                xamlMember.Setter = set_13_SoundCloudPlaylist_tag_list;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.release_year":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "release_year", "Object");
                xamlMember.Getter = get_14_SoundCloudPlaylist_release_year;
                xamlMember.Setter = set_14_SoundCloudPlaylist_release_year;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.track_count":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "track_count", "Int32");
                xamlMember.Getter = get_15_SoundCloudPlaylist_track_count;
                xamlMember.Setter = set_15_SoundCloudPlaylist_track_count;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.user_id":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "user_id", "Int32");
                xamlMember.Getter = get_16_SoundCloudPlaylist_user_id;
                xamlMember.Setter = set_16_SoundCloudPlaylist_user_id;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.last_modified":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "last_modified", "String");
                xamlMember.Getter = get_17_SoundCloudPlaylist_last_modified;
                xamlMember.Setter = set_17_SoundCloudPlaylist_last_modified;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.license":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "license", "String");
                xamlMember.Getter = get_18_SoundCloudPlaylist_license;
                xamlMember.Setter = set_18_SoundCloudPlaylist_license;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.tracks":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "tracks", "System.Collections.Generic.List`1<SoundCloud.Models.SoundCloudTrack>");
                xamlMember.Getter = get_19_SoundCloudPlaylist_tracks;
                xamlMember.Setter = set_19_SoundCloudPlaylist_tracks;
                break;
            case "SoundCloud.Models.SoundCloudTrack.kind":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "kind", "String");
                xamlMember.Getter = get_20_SoundCloudTrack_kind;
                xamlMember.Setter = set_20_SoundCloudTrack_kind;
                break;
            case "SoundCloud.Models.SoundCloudTrack.id":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "id", "Int32");
                xamlMember.Getter = get_21_SoundCloudTrack_id;
                xamlMember.Setter = set_21_SoundCloudTrack_id;
                break;
            case "SoundCloud.Models.SoundCloudTrack.created_at":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "created_at", "String");
                xamlMember.Getter = get_22_SoundCloudTrack_created_at;
                xamlMember.Setter = set_22_SoundCloudTrack_created_at;
                break;
            case "SoundCloud.Models.SoundCloudTrack.user_id":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "user_id", "Int32");
                xamlMember.Getter = get_23_SoundCloudTrack_user_id;
                xamlMember.Setter = set_23_SoundCloudTrack_user_id;
                break;
            case "SoundCloud.Models.SoundCloudTrack.duration":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "duration", "Int32");
                xamlMember.Getter = get_24_SoundCloudTrack_duration;
                xamlMember.Setter = set_24_SoundCloudTrack_duration;
                break;
            case "SoundCloud.Models.SoundCloudTrack.commentable":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "commentable", "Boolean");
                xamlMember.Getter = get_25_SoundCloudTrack_commentable;
                xamlMember.Setter = set_25_SoundCloudTrack_commentable;
                break;
            case "SoundCloud.Models.SoundCloudTrack.state":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "state", "String");
                xamlMember.Getter = get_26_SoundCloudTrack_state;
                xamlMember.Setter = set_26_SoundCloudTrack_state;
                break;
            case "SoundCloud.Models.SoundCloudTrack.original_content_size":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "original_content_size", "Int32");
                xamlMember.Getter = get_27_SoundCloudTrack_original_content_size;
                xamlMember.Setter = set_27_SoundCloudTrack_original_content_size;
                break;
            case "SoundCloud.Models.SoundCloudTrack.last_modified":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "last_modified", "String");
                xamlMember.Getter = get_28_SoundCloudTrack_last_modified;
                xamlMember.Setter = set_28_SoundCloudTrack_last_modified;
                break;
            case "SoundCloud.Models.SoundCloudTrack.sharing":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "sharing", "String");
                xamlMember.Getter = get_29_SoundCloudTrack_sharing;
                xamlMember.Setter = set_29_SoundCloudTrack_sharing;
                break;
            case "SoundCloud.Models.SoundCloudTrack.tag_list":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "tag_list", "String");
                xamlMember.Getter = get_30_SoundCloudTrack_tag_list;
                xamlMember.Setter = set_30_SoundCloudTrack_tag_list;
                break;
            case "SoundCloud.Models.SoundCloudTrack.permalink":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "permalink", "String");
                xamlMember.Getter = get_31_SoundCloudTrack_permalink;
                xamlMember.Setter = set_31_SoundCloudTrack_permalink;
                break;
            case "SoundCloud.Models.SoundCloudTrack.streamable":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "streamable", "Boolean");
                xamlMember.Getter = get_32_SoundCloudTrack_streamable;
                xamlMember.Setter = set_32_SoundCloudTrack_streamable;
                break;
            case "SoundCloud.Models.SoundCloudTrack.embeddable_by":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "embeddable_by", "String");
                xamlMember.Getter = get_33_SoundCloudTrack_embeddable_by;
                xamlMember.Setter = set_33_SoundCloudTrack_embeddable_by;
                break;
            case "SoundCloud.Models.SoundCloudTrack.downloadable":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "downloadable", "Boolean");
                xamlMember.Getter = get_34_SoundCloudTrack_downloadable;
                xamlMember.Setter = set_34_SoundCloudTrack_downloadable;
                break;
            case "SoundCloud.Models.SoundCloudTrack.purchase_url":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "purchase_url", "String");
                xamlMember.Getter = get_35_SoundCloudTrack_purchase_url;
                xamlMember.Setter = set_35_SoundCloudTrack_purchase_url;
                break;
            case "SoundCloud.Models.SoundCloudTrack.label_id":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "label_id", "Object");
                xamlMember.Getter = get_36_SoundCloudTrack_label_id;
                xamlMember.Setter = set_36_SoundCloudTrack_label_id;
                break;
            case "SoundCloud.Models.SoundCloudTrack.purchase_title":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "purchase_title", "String");
                xamlMember.Getter = get_37_SoundCloudTrack_purchase_title;
                xamlMember.Setter = set_37_SoundCloudTrack_purchase_title;
                break;
            case "SoundCloud.Models.SoundCloudTrack.genre":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "genre", "String");
                xamlMember.Getter = get_38_SoundCloudTrack_genre;
                xamlMember.Setter = set_38_SoundCloudTrack_genre;
                break;
            case "SoundCloud.Models.SoundCloudTrack.title":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "title", "String");
                xamlMember.Getter = get_39_SoundCloudTrack_title;
                xamlMember.Setter = set_39_SoundCloudTrack_title;
                break;
            case "SoundCloud.Models.SoundCloudTrack.description":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "description", "String");
                xamlMember.Getter = get_40_SoundCloudTrack_description;
                xamlMember.Setter = set_40_SoundCloudTrack_description;
                break;
            case "SoundCloud.Models.SoundCloudTrack.label_name":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "label_name", "Object");
                xamlMember.Getter = get_41_SoundCloudTrack_label_name;
                xamlMember.Setter = set_41_SoundCloudTrack_label_name;
                break;
            case "SoundCloud.Models.SoundCloudTrack.release":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "release", "Object");
                xamlMember.Getter = get_42_SoundCloudTrack_release;
                xamlMember.Setter = set_42_SoundCloudTrack_release;
                break;
            case "SoundCloud.Models.SoundCloudTrack.track_type":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "track_type", "Object");
                xamlMember.Getter = get_43_SoundCloudTrack_track_type;
                xamlMember.Setter = set_43_SoundCloudTrack_track_type;
                break;
            case "SoundCloud.Models.SoundCloudTrack.key_signature":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "key_signature", "Object");
                xamlMember.Getter = get_44_SoundCloudTrack_key_signature;
                xamlMember.Setter = set_44_SoundCloudTrack_key_signature;
                break;
            case "SoundCloud.Models.SoundCloudTrack.isrc":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "isrc", "Object");
                xamlMember.Getter = get_45_SoundCloudTrack_isrc;
                xamlMember.Setter = set_45_SoundCloudTrack_isrc;
                break;
            case "SoundCloud.Models.SoundCloudTrack.video_url":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "video_url", "Object");
                xamlMember.Getter = get_46_SoundCloudTrack_video_url;
                xamlMember.Setter = set_46_SoundCloudTrack_video_url;
                break;
            case "SoundCloud.Models.SoundCloudTrack.bpm":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "bpm", "Object");
                xamlMember.Getter = get_47_SoundCloudTrack_bpm;
                xamlMember.Setter = set_47_SoundCloudTrack_bpm;
                break;
            case "SoundCloud.Models.SoundCloudTrack.release_year":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "release_year", "Object");
                xamlMember.Getter = get_48_SoundCloudTrack_release_year;
                xamlMember.Setter = set_48_SoundCloudTrack_release_year;
                break;
            case "SoundCloud.Models.SoundCloudTrack.release_month":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "release_month", "Object");
                xamlMember.Getter = get_49_SoundCloudTrack_release_month;
                xamlMember.Setter = set_49_SoundCloudTrack_release_month;
                break;
            case "SoundCloud.Models.SoundCloudTrack.release_day":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "release_day", "Object");
                xamlMember.Getter = get_50_SoundCloudTrack_release_day;
                xamlMember.Setter = set_50_SoundCloudTrack_release_day;
                break;
            case "SoundCloud.Models.SoundCloudTrack.original_format":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "original_format", "String");
                xamlMember.Getter = get_51_SoundCloudTrack_original_format;
                xamlMember.Setter = set_51_SoundCloudTrack_original_format;
                break;
            case "SoundCloud.Models.SoundCloudTrack.license":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "license", "String");
                xamlMember.Getter = get_52_SoundCloudTrack_license;
                xamlMember.Setter = set_52_SoundCloudTrack_license;
                break;
            case "SoundCloud.Models.SoundCloudTrack.uri":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "uri", "String");
                xamlMember.Getter = get_53_SoundCloudTrack_uri;
                xamlMember.Setter = set_53_SoundCloudTrack_uri;
                break;
            case "SoundCloud.Models.SoundCloudTrack.user":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "user", "SoundCloud.Models.PlaylistUser");
                xamlMember.Getter = get_54_SoundCloudTrack_user;
                xamlMember.Setter = set_54_SoundCloudTrack_user;
                break;
            case "SoundCloud.Models.SoundCloudTrack.attachments_uri":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "attachments_uri", "String");
                xamlMember.Getter = get_55_SoundCloudTrack_attachments_uri;
                xamlMember.Setter = set_55_SoundCloudTrack_attachments_uri;
                break;
            case "SoundCloud.Models.SoundCloudTrack.permalink_url":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "permalink_url", "String");
                xamlMember.Getter = get_56_SoundCloudTrack_permalink_url;
                xamlMember.Setter = set_56_SoundCloudTrack_permalink_url;
                break;
            case "SoundCloud.Models.SoundCloudTrack.artwork_url":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "artwork_url", "String");
                xamlMember.Getter = get_57_SoundCloudTrack_artwork_url;
                xamlMember.Setter = set_57_SoundCloudTrack_artwork_url;
                break;
            case "SoundCloud.Models.SoundCloudTrack.waveform_url":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "waveform_url", "String");
                xamlMember.Getter = get_58_SoundCloudTrack_waveform_url;
                xamlMember.Setter = set_58_SoundCloudTrack_waveform_url;
                break;
            case "SoundCloud.Models.SoundCloudTrack.stream_url":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "stream_url", "String");
                xamlMember.Getter = get_59_SoundCloudTrack_stream_url;
                xamlMember.Setter = set_59_SoundCloudTrack_stream_url;
                break;
            case "SoundCloud.Models.SoundCloudTrack.playback_count":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "playback_count", "Int32");
                xamlMember.Getter = get_60_SoundCloudTrack_playback_count;
                xamlMember.Setter = set_60_SoundCloudTrack_playback_count;
                break;
            case "SoundCloud.Models.SoundCloudTrack.download_count":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "download_count", "Int32");
                xamlMember.Getter = get_61_SoundCloudTrack_download_count;
                xamlMember.Setter = set_61_SoundCloudTrack_download_count;
                break;
            case "SoundCloud.Models.SoundCloudTrack.favoritings_count":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "favoritings_count", "Int32");
                xamlMember.Getter = get_62_SoundCloudTrack_favoritings_count;
                xamlMember.Setter = set_62_SoundCloudTrack_favoritings_count;
                break;
            case "SoundCloud.Models.SoundCloudTrack.comment_count":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudTrack");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "comment_count", "Int32");
                xamlMember.Getter = get_63_SoundCloudTrack_comment_count;
                xamlMember.Setter = set_63_SoundCloudTrack_comment_count;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.playlist_type":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "playlist_type", "Object");
                xamlMember.Getter = get_64_SoundCloudPlaylist_playlist_type;
                xamlMember.Setter = set_64_SoundCloudPlaylist_playlist_type;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.id":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "id", "Int32");
                xamlMember.Getter = get_65_SoundCloudPlaylist_id;
                xamlMember.Setter = set_65_SoundCloudPlaylist_id;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.downloadable":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "downloadable", "Boolean");
                xamlMember.Getter = get_66_SoundCloudPlaylist_downloadable;
                xamlMember.Setter = set_66_SoundCloudPlaylist_downloadable;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.sharing":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "sharing", "String");
                xamlMember.Getter = get_67_SoundCloudPlaylist_sharing;
                xamlMember.Setter = set_67_SoundCloudPlaylist_sharing;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.created_at":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "created_at", "String");
                xamlMember.Getter = get_68_SoundCloudPlaylist_created_at;
                xamlMember.Setter = set_68_SoundCloudPlaylist_created_at;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.release":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "release", "Object");
                xamlMember.Getter = get_69_SoundCloudPlaylist_release;
                xamlMember.Setter = set_69_SoundCloudPlaylist_release;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.kind":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "kind", "String");
                xamlMember.Getter = get_70_SoundCloudPlaylist_kind;
                xamlMember.Setter = set_70_SoundCloudPlaylist_kind;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.title":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "title", "String");
                xamlMember.Getter = get_71_SoundCloudPlaylist_title;
                xamlMember.Setter = set_71_SoundCloudPlaylist_title;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.type":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "type", "Object");
                xamlMember.Getter = get_72_SoundCloudPlaylist_type;
                xamlMember.Setter = set_72_SoundCloudPlaylist_type;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.purchase_title":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "purchase_title", "Object");
                xamlMember.Getter = get_73_SoundCloudPlaylist_purchase_title;
                xamlMember.Setter = set_73_SoundCloudPlaylist_purchase_title;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.artwork_url":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "artwork_url", "Object");
                xamlMember.Getter = get_74_SoundCloudPlaylist_artwork_url;
                xamlMember.Setter = set_74_SoundCloudPlaylist_artwork_url;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.ean":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "ean", "Object");
                xamlMember.Getter = get_75_SoundCloudPlaylist_ean;
                xamlMember.Setter = set_75_SoundCloudPlaylist_ean;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.streamable":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "streamable", "Boolean");
                xamlMember.Getter = get_76_SoundCloudPlaylist_streamable;
                xamlMember.Setter = set_76_SoundCloudPlaylist_streamable;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.user":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "user", "SoundCloud.Models.PlaylistUser");
                xamlMember.Getter = get_77_SoundCloudPlaylist_user;
                xamlMember.Setter = set_77_SoundCloudPlaylist_user;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.embeddable_by":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "embeddable_by", "String");
                xamlMember.Getter = get_78_SoundCloudPlaylist_embeddable_by;
                xamlMember.Setter = set_78_SoundCloudPlaylist_embeddable_by;
                break;
            case "SoundCloud.Models.SoundCloudPlaylist.label_id":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.Models.SoundCloudPlaylist");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "label_id", "Object");
                xamlMember.Getter = get_79_SoundCloudPlaylist_label_id;
                xamlMember.Setter = set_79_SoundCloudPlaylist_label_id;
                break;
            case "SoundCloud.DashBoard.FavoritesTrack":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.DashBoard");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "FavoritesTrack", "System.Collections.ObjectModel.ObservableCollection`1<SoundCloud.Models.SoundCloudTrack>");
                xamlMember.Getter = get_80_DashBoard_FavoritesTrack;
                xamlMember.Setter = set_80_DashBoard_FavoritesTrack;
                break;
            case "SoundCloud.DashBoard.clientDownload":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.DashBoard");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "clientDownload", "SoundCloud.DownloadJson");
                xamlMember.Getter = get_81_DashBoard_clientDownload;
                xamlMember.Setter = set_81_DashBoard_clientDownload;
                break;
            case "SoundCloud.FavoritesControl.Track":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.FavoritesControl");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "Track", "SoundCloud.Models.SoundCloudTrack");
                xamlMember.Getter = get_82_FavoritesControl_Track;
                xamlMember.SetIsReadOnly();
                break;
            case "SoundCloud.MainPage.clientDownload":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.MainPage");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "clientDownload", "SoundCloud.DownloadJson");
                xamlMember.Getter = get_83_MainPage_clientDownload;
                xamlMember.Setter = set_83_MainPage_clientDownload;
                break;
            case "SoundCloud.MainPage.meInfo":
                userType = (global::SoundCloud.SoundCloud_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SoundCloud.MainPage");
                xamlMember = new global::SoundCloud.SoundCloud_XamlTypeInfo.XamlMember(this, "meInfo", "SoundCloud.Models.SoundCloudMe");
                xamlMember.Getter = get_84_MainPage_meInfo;
                xamlMember.Setter = set_84_MainPage_meInfo;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::SoundCloud.SoundCloud_XamlTypeInfo.XamlSystemBaseType
    {
        global::SoundCloud.SoundCloud_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::SoundCloud.SoundCloud_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::SoundCloud.SoundCloud_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::SoundCloud.SoundCloud_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

